#!/usr/bin/env perl

use v5.16;
use Net::OpenSSH;
use File::HomeDir;
use YAML qw(LoadFile);
use Scalar::Util qw(looks_like_number);

my $cf = File::HomeDir->my_home . q[/.kungfurc];
my $config = eval {
    LoadFile($cf);
};
die "$@" if $@;

foreach (qw/host user dir/) {
    die "Missing config parameter $_: $!" unless defined $_;
}

my $host = $config->{host};
my $dir  = $config->{dir};
$dir = $dir.'/' unless substr($dir,-1,1) eq '/';
delete $config->{$_} foreach qw/host dir/;

my $ssh = Net::OpenSSH->new($host,%{$config});

$ssh->error and
    die "Couldn't establish SSH connection: " . $ssh->error;

my @infos = $ssh->capture(qq[cd $dir && ls $dir | xargs -I %% -n1 du -h %%]);
@infos = map {
    chomp($_);
    my ($h,$t) = split(/\s+/, $_, 2);
    { file => $t, size => $h }
} @infos;
say "$_ ) $infos[$_]->{size}\t$infos[$_]->{file}" foreach (1..$#infos);
say;
print q[Enter the file you wish to download (or q to quit): ];

my $which = <STDIN>;
chomp $which;
exit(1) if $which eq '' or $which eq 'q';

warn "Not a number: $which$!" and exit(1)
    unless looks_like_number($which);
warn "Out of range: $which$!" and exit(1)
    unless $which > 0 and $which < scalar(@infos);

my $downloaded = $ssh->scp_get({
        recursive => 1,
        verbose   => 1,
    },
    qq[/home/kungfu/Downloads/$infos[0+$which]->{file}]);

say "Download completed successfully" if $downloaded;

exit(0);
